<?php


/**
 * Helper for hook_cron() to send a new edition.
 *
 * @param $node
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _send_new_edition($node) {

  $node_storage = \Drupal::EntityTypeManager()->getStorage('node')->load($node);
  \Drupal::service('simplenews.spool_storage')->addIssue($node_storage);
  $node_storage->save();
}

/**
 * Helper for hook_cron to set news edition status on database
 *
 * @param $nid
 * @param $status
 */
function _set_newsletter_status($nid, $status) {
  $query = \Drupal::database()->update('{node__simplenews_issue}');
  $query->fields([
    'simplenews_issue_status' => $status,
  ]);
  $query->condition('entity_id', $nid);
  $query->execute();
}

/**
 * Sent newsletter function
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _send_newsletters() {
  // Store all the node id of entity type simplenews_issue into an object array
  $results = \Drupal::entityTypeManager()
    ->getListBuilder('node')
    ->getStorage()
    ->loadByProperties([
      'type' => 'simplenews_issue',
      'status' => 1,
    ]);


  // Loop through each stored node id object
  foreach ($results as $record) {

    // convert record from class object to string by grabbing the id in the object
    $record = $record->id();

    // Set the status of the node to 1 in preparation for sending
    _set_newsletter_status($record, '1');
    //send news letter for each node
    _send_new_edition($record);
    //set status back to 0 for future run
    _set_newsletter_status($record, '0');

  }
}

/**
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _cron_helper() {
  $settings = \Drupal::config('simplenews_cron.settings')->get('send_date');

  /**
   * Check last run and if less than a day return
   */
  //load cron job entity
  $ultimate_cron_entity = \Drupal::entityTypeManager()
    ->getStorage('ultimate_cron_job')
    ->load('simplenews_cron_cron');
  $log_entry = $ultimate_cron_entity->loadLatestLogEntry();


  //check time diference
  if(!strtotime($log_entry->start_time) < strtotime('-1 days') ) {
    return;
  } else if(!date('D') == $settings) {
    return;
  } else {
    _send_newsletters();
  }


}


/**
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function simplenews_cron_cron() {
  _cron_helper();
}

